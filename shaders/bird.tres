[gd_resource type="VisualShader" load_steps=2 format=3 uid="uid://c345gxgqxay1d"]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_caj2x"]
output_port_for_preview = 0
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(1, 1, 1)]
expanded_output_ports = [0]
operator = 7

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
	vec3 n_out2p0;
// ColorOp:2
	vec3 n_in2p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_in2p1 = vec3(1.00000, 1.00000, 1.00000);
	{
		float base = n_in2p0.x;
		float blend = n_in2p1.x;
		if (base < 0.5) {
			n_out2p0.x = (base * (blend + 0.5));
		} else {
			n_out2p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_in2p0.y;
		float blend = n_in2p1.y;
		if (base < 0.5) {
			n_out2p0.y = (base * (blend + 0.5));
		} else {
			n_out2p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_in2p0.z;
		float blend = n_in2p1.z;
		if (base < 0.5) {
			n_out2p0.z = (base * (blend + 0.5));
		} else {
			n_out2p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}


// Output:0
	COLOR.rgb = n_out2p0;


}
"
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(400, 160)
nodes/vertex/2/node = SubResource("VisualShaderNodeColorOp_caj2x")
nodes/vertex/2/position = Vector2(-200, 380)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 2)
